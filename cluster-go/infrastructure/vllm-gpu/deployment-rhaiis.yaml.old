apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gpu
  namespace: vllm-gpu
  labels:
    app: vllm-gpu
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: vllm-gpu
  template:
    metadata:
      labels:
        app: vllm-gpu
    spec:
      volumes:
      - name: cache-volume
        persistentVolumeClaim:
          claimName: vllm-gpu
      # vLLM needs to access the host's shared memory for tensor parallel inference.
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: "10Gi"
      containers:
      - name: vllm-gpu
        image: registry.redhat.io/rhaiis/vllm-cuda-rhel9:latest
        command:
          - /bin/sh
          - '-c'
        args: [
          "vllm serve ibm-granite/granite-3.3-8b-instruct --trust-remote-code --tensor-parallel-size=1 --max-model-len 131072"
        ]
        env:
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-api-token
              key: hf-api-token
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "2"
            memory: 15G
            nvidia.com/gpu: "1"
          requests:
            cpu: "1"
            memory: 10G
            nvidia.com/gpu: "1"
        volumeMounts:
        - mountPath: /opt/app-root/src/.cache
          name: cache-volume
        - name: shm
          mountPath: /dev/shm
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 420
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 420
          periodSeconds: 20
